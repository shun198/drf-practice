name: Test Service Container
on:
  pull_request:
    branches-ignore:
      - "release/**"
jobs:
  test:
    name: Run Test Code
    runs-on: ubuntu-20.04
    services:
      db:
        image: mysql:8.0.31
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: django-db
          MYSQL_USER: django
          MYSQL_PASSWORD: django
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: generate .env
        run:
          chmod +x set-up-env.test.sh && sh set-up-env.test.sh
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
          DEBUG: ${{ secrets.DEBUG }}
          DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      - name: inspect environment variables
        run: env
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: poetry install
      - name: Run migration
        run: |
          poetry run python manage.py makemigrations
          poetry run python manage.py migrate
      - name: Run tests
        run: poetry run pytest
