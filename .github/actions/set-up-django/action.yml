name: 'Setup Poetry and Django'

description: 'Setup Django by using cache and Poetry'

# inputの箇所にpathを指定してあげるのはどうかな？
inputs:
  working-directory:
    description: 'working-directory of pyproject.toml'
    required: true
    default: application

env:
  SECRET_KEY: test
  DJANGO_SETTINGS_MODULE: project.settings
  ALLOWED_HOSTS: 127.0.0.1
  DEBUG: "True"
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: test-db
  MYSQL_HOST: 127.0.0.1
  MYSQL_PORT: 3306
  MYSQL_USER: test
  MYSQL_PASSWORD: test

runs:
  # compositeが必須
  using: 'composite'
  services:
    db:
      image: mysql:8.0
      ports:
        - 3306:3306
      env:
        MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
        MYSQL_USER: ${{ env.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
      options: >-
        --health-cmd "mysqladmin ping"
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5
  steps:
    - name: Grant privileges to user
      run: mysql --protocol=tcp -h 127.0.0.1 -P 3306 -u root -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON *.* TO '$MYSQL_USER'@'%'; FLUSH PRIVILEGES;"
      shell: bash
    - name: Install poetry
      run: pipx install poetry
      shell: bash
    - name: Use cache dependencies
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install Packages
      run: poetry install
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Execute Migration
      run: |
        poetry run python manage.py makemigrations
        poetry run python manage.py migrate
      shell: bash
      working-directory: ${{ inputs.working-directory }}
